# Node CircleCI 2.0 configuration file to DTA cloud 2.0

version: 2
jobs:

  # DEPLOY-STAGING JOB
  # installing dependencies, building assets and deploying to staging
  deploy-staging:
    docker:
      - image: circleci/node:8.9.1

    steps:
      - checkout                       # get the files from the repo
      - run: rm -rf node_modules       # delete node_modules to bust caching
      - run: npm install
      - run: npm run build             # required build step
      # broken link check
      - run: sudo npm install -g broken-link-checker
      - run: sudo npm install -g http-server
      - run: http-server ./site > http.log 2>&1 & sleep 5 && sudo blc -r --exclude "/content-guide/" --exclude-external http://localhost:8080
      # delete node_modules folder again to not push it to cf
      - run: rm -rf node_modules
      # install packages: cf-cli and tree
      - run: sudo apt-get install apt-transport-https
      - run: wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
      - run: echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
      - run: sudo apt-get update
      - run: sudo apt-get install tree
      - run: sudo apt-get install cf-cli
      - run: cf install-plugin https://github.com/govau/autopilot/releases/download/0.0.5-venapp/autopilot-linux -f
      - run: cf version                # log what version we are running
      - run: cf login -a api.system.y.cld.gov.au -o $CF_ORG_STAGING -s $CF_SPACE_STAGING -u $CF_USER_STAGING -p $CF_PASSWORD_STAGING
      - run: tree -C                   # log all files before we push
      - run: cf zero-downtime-push service-manual -f manifest-staging.yml


  # DEPLOY-PROD JOB
  # installing dependencies, building assets and deploying to production
  deploy-prod:
    docker:
      - image: circleci/node:8.9.1

    steps:
      - checkout
      - run: rm -rf node_modules
      - run: npm install
      - run: npm run build
      - run: rm -rf node_modules
      - run: sudo apt-get install apt-transport-https
      - run: wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
      - run: echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
      - run: sudo apt-get update
      - run: sudo apt-get install tree
      - run: sudo apt-get install cf-cli
      - run: cf install-plugin https://github.com/govau/autopilot/releases/download/0.0.5-venapp/autopilot-linux -f
      - run: cf version
      - run: cf login -a api.system.b.cld.gov.au -o $CF_ORG_PROD -s $CF_SPACE_PROD -u $CF_USER_PROD -p $CF_PASSWORD_PROD
      - run: tree -C
      - run: cf zero-downtime-push guides -f manifest-production.yml


  # DEPLOY-TEST JOB
  # installing dependencies, building assets and deploying to test branches
  deploy-test:
    docker:
      - image: circleci/node:8.9.1

    steps:
      - checkout
      - run: rm -rf node_modules
      - run: npm install
      - run: npm run build
      # broken link check
      - run: sudo npm install -g broken-link-checker
      - run: sudo npm install -g http-server
      - run: http-server ./site > http.log 2>&1 & sleep 5 && sudo blc -r --exclude "/content-guide/" --exclude-external http://localhost:8080
      # delete node_modules folder again to not push it to cf
      - run: rm -rf node_modules
      - run: sudo apt-get install apt-transport-https
      - run: wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
      - run: echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
      - run: sudo apt-get update
      - run: sudo apt-get install tree
      - run: sudo apt-get install cf-cli
      - run: cf install-plugin https://github.com/govau/autopilot/releases/download/0.0.5-venapp/autopilot-linux -f
      - run: cf version
      - run: cf login -a api.system.y.cld.gov.au -o $CF_ORG_STAGING -s $CF_SPACE_STAGING -u $CF_USER_STAGING -p $CF_PASSWORD_STAGING
      - run: tree -C
      - run: cf zero-downtime-push service-manual-$CIRCLE_BRANCH -f manifest-testing.yml



# OUR WORKFLOW
# this is where we orchestrate our jobs
workflows:
  version: 2
  deploying:
    jobs:
      # - test                     # run tests first

      - deploy-staging:          # run deploy staging
          # requires:
            # - test               # but make sure `test` has finished
          filters:
            branches:
              only: develop      # and only on the `develop` branch

      - deploy-prod:             # run deploy production
          # requires:
            # - test               # but make sure `test` has finished
          filters:
            branches:
              only: master       # and only on the `master` branch

      - deploy-test:             # run deploy production
          # requires:
            # - test               # but make sure `test` has finished
          filters:
            branches:
              only: /.*-staging/ # and only on the branches that end with `-staging`
